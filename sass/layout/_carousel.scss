@use "../abstracts/font_sizes" as font_size;
@use "../abstracts/colors" as color;
@use "../abstracts/spacings" as spacing;
@use "../abstracts/borders" as border;
@use "../abstracts/shadows" as shadow;
@use "../abstracts/breakpoints" as breakpoint;

.carousel-section {
    margin: spacing.$horizontal auto 0 auto;
    max-width: calc(breakpoint.$max-width - spacing.$medium);

    h2 {
        margin-left: spacing.$medium;

        @include breakpoint.large {
            margin-left: 5rem;
        }
    }
}

.carousel {
    display: flex;
    align-items: center;
    
    > button {
        display: none;
        background: none;
        border: none;
        cursor: pointer;
        background-size: cover;
        background-repeat: no-repeat;
        &:nth-child(1) {
            background-image: url("../../icons/arrow_back.svg");
        }
        &:nth-child(3) {
            background-image: url("../../icons/arrow_forward.svg");
        }
        @include breakpoint.large {
            display: block;
            margin: 1.3rem;
            padding: spacing.$medium;

        }
    }

    .overflow-container {
        overflow: scroll;
        padding: spacing.$medium;
        scroll-snap-type: x mandatory;
        -ms-overflow-style: none;  //IE and Edge
        scrollbar-width: none;  // Firefox
        &::-webkit-scrollbar {
            display: none;
          }
          @include breakpoint.large {
            overflow: hidden;
            padding: spacing.$medium spacing.$small;
            transform: translateX(--scroll-value);

        }
        
    }
 
    .slider {
        display: grid;
        grid-template-columns: repeat(8, 82%);
        gap: spacing.$card-gap;
        width: 100%; // 100% (cards) * 8 - a gap size
        @include breakpoint.small {
            grid-template-columns: repeat(8, 39%);
        }
        @include breakpoint.medium {
            grid-template-columns: repeat(8, 27%);
        }
        @include breakpoint.large {
            grid-template-columns: repeat(8, calc(25% - 1.2rem));
            transition: transform 1.2s cubic-bezier(.46,0,.39,1);
            &.to-end {
                transform: translateX(calc(-100% - spacing.$medium));
            }
        }
    }
    .card {
        scroll-snap-align: center;
    }
}





